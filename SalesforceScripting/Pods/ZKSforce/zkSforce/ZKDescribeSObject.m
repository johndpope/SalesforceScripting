// Copyright (c) 2006-2007 Simon Fell
//
// Permission is hereby granted, free of charge, to any person obtaining a 
// copy of this software and associated documentation files (the "Software"), 
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense, 
// and/or sell copies of the Software, and to permit persons to whom the 
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included 
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN 
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce. 
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKDescribeSObject.h"
#import "ZKActionOverride.h"
#import "ZKChildRelationship.h"
#import "ZKDescribeField.h"
#import "ZKNamedLayoutInfo.h"
#import "ZKRecordTypeInfo.h"
#import "ZKScopeInfo.h"

@implementation ZKDescribeSObject

-(void)dealloc {
	[fieldList release];
	[fieldsByName release];
	[super dealloc];
}

-(NSArray *)fields {
	if (fieldList == nil) {
		NSArray *fa = [self complexTypeArrayFromElements:@"fields" cls:[ZKDescribeField class]];
		for (ZKDescribeField *f in fa)
			[f setSobject:self];
		fieldList = [fa retain];
	}
	return fieldList;
}

-(NSArray *)actionOverrides {
    return [self complexTypeArrayFromElements:@"actionOverrides" cls:[ZKActionOverride class]];
}
			
-(NSArray *)childRelationships {
    return [self complexTypeArrayFromElements:@"childRelationships" cls:[ZKChildRelationship class]];
}
			
-(BOOL)compactLayoutable {
    return [self boolean:@"compactLayoutable"];
}
			
-(NSArray *)namedLayoutInfos {
    return [self complexTypeArrayFromElements:@"namedLayoutInfos" cls:[ZKNamedLayoutInfo class]];
}
			
-(NSString *)networkScopeFieldName {
    return [self string:@"networkScopeFieldName"];
}
			
-(NSArray *)recordTypeInfos {
    return [self complexTypeArrayFromElements:@"recordTypeInfos" cls:[ZKRecordTypeInfo class]];
}
			
-(BOOL)searchLayoutable {
    return [self boolean:@"searchLayoutable"];
}
			
-(NSArray *)supportedScopes {
    return [self complexTypeArrayFromElements:@"supportedScopes" cls:[ZKScopeInfo class]];
}
			
-(NSString *)urlDetail {
    return [self string:@"urlDetail"];
}
			
-(NSString *)urlEdit {
    return [self string:@"urlEdit"];
}
			
-(NSString *)urlNew {
    return [self string:@"urlNew"];
}
			
@end
